components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Board:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        cards:
          type: array
          items: 
            $ref: '#/components/schemas/Card'
        owner:
          type: string
      example:
        id: 6fcac333954b54139806ff46
        name: Currency Pairs
        cards: [{},{}]
        owner: 5ebac534954b54139806c112

    Card:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        boards:
          type: array
          items:
            $ref: '#/components/schemas/Board'
        owner:
          type: string
        checklists:
          type: array
          items:
            $ref: '#/components/schemas/Checklist'
        toDoLists:
          type: array
          items:
            $ref: '#/components/schemas/ToDoList'
        # rating:
        #   type: string
        note:
          type: object
          properties:
            h1: 
              type: string
            h2:
              type: string
            p:
              type: string
          xml:
            name:'xml-note'
        links:
          type: array
          items:
            type: string      
      example:
        id: 6fcac333954b54139806ff46
        name: Apple
        boards: [{}]
        owner: 5ebac534954b54139806c112
        checklists: [{},{}]
        toDoLists: [{},{}]
        # rating: very good
        note: <xml-note><h1>Quarterly performance</h1><h2>2023-Q1</h2><p>2% growth YTD</p></xml-note>
        links: ["www.techcrunch.com","www.apple.com"]

    Checklist:
      type: object
      properties:
        id: 
          type: string
        name:
          type: string
        cardId:
          type: string
        boardId:
          type: string
        owner:
          type: string
        global:
          type: boolean
        rating:
          type: string
          enum: [very poor, poor, average, good, very good]
        columnPosition:
          type: integer
          minimum: 0
          # maximum: 30
    
    ToDoList:
      type: string
      properties:
        freeText: 
          type: string
        cardId:
          type: string
        status:
          type: string
          enum: [Not started, In progress, Completed, Cancelled]

        


    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateBoard:
      description: Board name already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Board name already taken
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
